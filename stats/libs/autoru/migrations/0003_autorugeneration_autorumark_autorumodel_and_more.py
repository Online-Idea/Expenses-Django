# Generated by Django 4.1.4 on 2024-05-07 10:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('autoru', '0002_alter_autoruproduct_client'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoruGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название поколения')),
                ('id_generation_avtoru', models.IntegerField(verbose_name='id из xml файла')),
            ],
            options={
                'verbose_name': 'Поколение',
                'verbose_name_plural': 'Поколения',
                'db_table': 'autoru_generations',
            },
        ),
        migrations.CreateModel(
            name='AutoruMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Название марки')),
                ('code_mark_autoru', models.CharField(max_length=64, verbose_name='Тег <code> из xml-файла Авто ру')),
            ],
            options={
                'verbose_name': 'Марка',
                'verbose_name_plural': 'Марки',
                'db_table': 'autoru_marks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AutoruModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название модели')),
                ('id_folder_avtoru', models.IntegerField(verbose_name='Поле id у тега <folder> из xml файла')),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='autoru.autorumark', verbose_name='Ссылка на марку')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
                'db_table': 'autoru_models',
            },
        ),
        migrations.CreateModel(
            name='AutoruModification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модификации')),
                ('years_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2024)], verbose_name='Годы от')),
                ('years_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2024)], verbose_name='Год до')),
                ('clients_name', models.CharField(blank=True, max_length=512, null=True, verbose_name='Расшифровка от клиента')),
                ('short_name', models.CharField(editable=False, max_length=124, verbose_name='Короткое название')),
                ('drive', models.CharField(choices=[('Передний', 'Передний'), ('Задний', 'Задний'), ('Полный', 'Полный')], max_length=64, verbose_name='Привод')),
                ('engine_type', models.CharField(choices=[('Бензин', 'Бензин'), ('Дизель', 'Дизель'), ('Гибрид', 'Гибрид'), ('Электро', 'Электро')], max_length=64, verbose_name='Тип двигателя')),
                ('transmission', models.CharField(choices=[('Автомат', 'Автомат'), ('Робот', 'Робот'), ('Вариатор', 'Вариатор'), ('Механика', 'Механика')], max_length=64, verbose_name='Коробка передач')),
                ('power', models.IntegerField(verbose_name='Мощность')),
                ('engine_volume', models.FloatField(blank=True, null=True, verbose_name='Объём двигателя')),
                ('body_type', models.CharField(choices=[('Внедорожник', 'Внедорожник'), ('Внедорожник 3 дв.', 'Внедорожник 3 дв.'), ('Внедорожник 5 дв.', 'Внедорожник 5 дв.'), ('Внедорожник Coupe', 'Внедорожник Coupe'), ('Внедорожник ESV', 'Внедорожник ESV'), ('Внедорожник Grand', 'Внедорожник Grand'), ('Внедорожник L', 'Внедорожник L'), ('Внедорожник Long', 'Внедорожник Long'), ('Внедорожник X', 'Внедорожник X'), ('Кабриолет', 'Кабриолет'), ('Компактвэн', 'Компактвэн'), ('Купе', 'Купе'), ('Лифтбек', 'Лифтбек'), ('Микроавтобус', 'Микроавтобус'), ('Минивэн', 'Минивэн'), ('Минивэн Long', 'Минивэн Long'), ('Пикап', 'Пикап'), ('Родстер', 'Родстер'), ('Седан', 'Седан'), ('Седан Long', 'Седан Long'), ('Седан Pullman', 'Седан Pullman'), ('Тарга', 'Тарга'), ('Универсал', 'Универсал'), ('Универсал Cross', 'Универсал Cross'), ('Хэтчбек', 'Хэтчбек'), ('Хэтчбек 3 дв.', 'Хэтчбек 3 дв.'), ('Хэтчбек 5 дв.', 'Хэтчбек 5 дв.'), ('Цельнометаллический Фургон', 'Цельнометаллический Фургон')], max_length=64, verbose_name='Кузов')),
                ('doors', models.IntegerField(blank=True, null=True, verbose_name='Количество дверей')),
                ('battery_capacity', models.IntegerField(blank=True, null=True, verbose_name='Ёмкость батареи')),
                ('load_capacity', models.IntegerField(blank=True, null=True, verbose_name='Грузоподъёмность')),
                ('id_modification_avtoru', models.IntegerField(verbose_name='id из xml файла')),
                ('tech_param_id', models.IntegerField(verbose_name='тег <tech_param_id> из xml-файла')),
                ('generation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifications', to='autoru.autorugeneration', verbose_name='Поколение к которой относится модификация')),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoru.autorumark', verbose_name='Марка к которой относится модификация')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoru.autorumodel', verbose_name='Модель к которой относится модификация')),
            ],
            options={
                'verbose_name': 'Модификация',
                'verbose_name_plural': 'Модификации',
                'db_table': 'autoru_modifications',
            },
        ),
        migrations.AddField(
            model_name='autorugeneration',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='autoru.autorumodel', verbose_name='Ссылка на модель авто'),
        ),
        migrations.CreateModel(
            name='AutoruComplectation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название комплектации')),
                ('id_complectation_autoru', models.IntegerField()),
                ('modification', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='complectations', to='autoru.autorumodification', verbose_name='Модификация')),
            ],
            options={
                'verbose_name': 'Комплектация',
                'verbose_name_plural': 'Комплектации',
                'db_table': 'autoru_complectations',
            },
        ),
    ]
