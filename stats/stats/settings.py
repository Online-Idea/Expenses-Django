"""
Django settings for statsapp project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import environ
from pathlib import Path

live_deploy = False

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('DJANGO_SECRET_KEY')

if live_deploy:
    DEBUG = False

    ALLOWED_HOSTS = env('ALLOWED_HOSTS_LIVE').split(' ')

    # Database
    # https://docs.djangoproject.com/en/4.1/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env('DB_NAME_LIVE'),
            'USER': env('DB_USER_LIVE'),
            'PASSWORD': env('DB_PASSWORD_LIVE'),
            'HOST': env('DB_HOST_LIVE'),
            'PORT': '',
        }
    }

elif not live_deploy:
    DEBUG = True

    ALLOWED_HOSTS = []

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': env('DB_NAME_DEV'),
            'USER': env('DB_USER_DEV'),
            'PASSWORD': env('DB_PASSWORD_DEV'),
            'HOST': env('DB_HOST_DEV'),
            'PORT': env('DB_PORT_DEV'),
        }
    }

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    "crispy_forms",
    "crispy_bootstrap5",
    'statsapp.apps.StatsappConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'statsapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stats.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

if live_deploy:
    STATIC_ROOT = '/home/django/django_venv/src/staticfiles/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Celery settings
if live_deploy:
    # CELERY_BROKER_URL = env('CELERY_BROKER_URL_LIVE')
    # CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND_LIVE')

    CELERY_BROKER_URL = env('CELERY_BROKER_URL_DEV')
    CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND_DEV')

elif not live_deploy:
    CELERY_BROKER_URL = env('CELERY_BROKER_URL_DEV')
    CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND_DEV')

# CELERY_BEAT_SCHEDULE = {
#     'scheduled_task': {
#         'task': 'statsapp.tasks.test_task',
#         'schedule': 5.0,
#     }
# }

ALLOW_UNICODE_SLUGS = True

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"
